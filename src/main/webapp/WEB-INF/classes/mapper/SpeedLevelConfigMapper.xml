<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jingc.busi.common.mapper.SpeedLevelConfigMapper" >
  <resultMap id="BaseResultMap" type="com.jingc.busi.common.table.SpeedLevelConfig" >
    <id column="speed_level" property="speedLevel" jdbcType="CHAR" />
    <result column="ticket_interval" property="ticketInterval" jdbcType="INTEGER" />
    <result column="digital_interval" property="digitalInterval" jdbcType="INTEGER" />
    <result column="enter_interval" property="enterInterval" jdbcType="INTEGER" />
    <result column="dynamic_interval_min" property="dynamicIntervalMin" jdbcType="INTEGER" />
    <result column="dynamic_interval_max" property="dynamicIntervalMax" jdbcType="INTEGER" />
	 <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    speed_level, ticket_interval, digital_interval, enter_interval, dynamic_interval_min, 
    dynamic_interval_max, state
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from speed_level_config
    where speed_level = #{speedLevel,jdbcType=CHAR}
  </select>
  
  
  <select id="selectAllSpeedLevel" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from speed_level_config
  </select>
  
  <select id="selectByParam" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from speed_level_config  <where>
	<if test="speedLevelConfig.speedLevel != null and speedLevelConfig.speedLevel != ''">
		speed_level = #{speedLevelConfig.speedLevel,jdbcType=CHAR}
	</if>
	<if test="speedLevelConfig.ticketInterval != null  and speedLevelConfig.ticketInterval != -999">
	    and ticket_interval = #{speedLevelConfig.ticketInterval,jdbcType=INTEGER}
	</if>
	<if test="speedLevelConfig.state != null and speedLevelConfig.state != -999">  
	and state = #{speedLevelConfig.state,jdbcType=INTEGER} 
	</if>
	</where>
   <if test="pagination != null">limit #{pagination.firstResult},#{pagination.pageSize}</if>
  </select>
  
   <select id="getSpeedLevelCount" resultType="java.lang.Integer">
	 select count(speed_level) 
	 from speed_level_config
   </select>
  
  <insert id="insert" parameterType="com.jingc.busi.common.table.SpeedLevelConfig" >
    insert into speed_level_config (speed_level, ticket_interval, digital_interval, 
      enter_interval, dynamic_interval_min, dynamic_interval_max, state
      )
    values (#{speedLevel,jdbcType=CHAR}, #{ticketInterval,jdbcType=INTEGER}, #{digitalInterval,jdbcType=INTEGER}, 
      #{enterInterval,jdbcType=INTEGER}, #{dynamicIntervalMin,jdbcType=INTEGER}, #{dynamicIntervalMax,jdbcType=INTEGER},
	  #{state,jdbcType=INTEGER}
      )
  </insert>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from speed_level_config
    where speed_level = #{speedLevel,jdbcType=CHAR}
  </delete>
  
   <update id="update" parameterType="com.jingc.busi.common.table.SpeedLevelConfig" >
    update speed_level_config
    <set >
      <if test="speedLevel != null" >
        speed_level = #{speedLevel,jdbcType=CHAR},
      </if>
      <if test="ticketInterval != null" >
        ticket_interval = #{ticketInterval,jdbcType=INTEGER},
      </if>
      <if test="digitalInterval != null" >
        digital_interval = #{digitalInterval,jdbcType=INTEGER},
      </if>
      <if test="enterInterval != null" >
       enter_interval = #{enterInterval,jdbcType=INTEGER},
      </if>
      <if test="dynamicIntervalMin != null" >
        dynamic_interval_min = #{dynamicIntervalMin,jdbcType=INTEGER},
      </if>
      <if test="dynamicIntervalMax != null" >
        dynamic_interval_max = #{dynamicIntervalMax,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where speed_level = #{speedLevel,jdbcType=CHAR}
  </update>
  
   <select id="selectCondition1" resultMap="BaseResultMap">
  	select distinct speed_level from speed_level_config
  </select>
   <select id="selectCondition2" resultMap="BaseResultMap">
  	select distinct ticket_interval from speed_level_config
  </select>
   <select id="selectCondition3" resultMap="BaseResultMap">
  	select distinct state from speed_level_config
  </select>
  
</mapper>