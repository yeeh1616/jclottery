<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jingc.busi.common.mapper.StorePayLogMapper" >
  <resultMap id="BaseResultMap" type="com.jingc.busi.common.table.StorePayLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pay_store_id" property="payStoreId" jdbcType="INTEGER" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="accept_store_id" property="acceptStoreId" jdbcType="INTEGER" />
    <result column="operator_user_id" property="operatorUserId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="back_time" property="backTime" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="pay_id" property="payId" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="reserved1" property="reserved1" jdbcType="VARCHAR" />
    <result column="reserved2" property="reserved2" jdbcType="VARCHAR" />
    <result column="reserved3" property="reserved3" jdbcType="VARCHAR" />
    <result column="reserved4" property="reserved4" jdbcType="VARCHAR" />
    <result column="reserved5" property="reserved5" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, pay_store_id, accept_store_id, operator_user_id, type, money, create_time, back_time, 
    state, pay_id, comments, reserved1, reserved2, reserved3, reserved4, reserved5
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from store_pay_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store_pay_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.jingc.busi.common.table.StorePayLog" >
    insert into store_pay_log (id, pay_store_id, accept_store_id, 
      operator_user_id, type, money, 
      create_time, back_time, state, 
      pay_id, comments, reserved1, 
      reserved2, reserved3, reserved4, 
      reserved5)
    values (#{id,jdbcType=INTEGER}, #{payStoreId,jdbcType=INTEGER}, #{acceptStoreId,jdbcType=INTEGER}, 
      #{operatorUserId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=VARCHAR}, #{backTime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{payId,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}, #{reserved1,jdbcType=VARCHAR}, 
      #{reserved2,jdbcType=VARCHAR}, #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=VARCHAR}, 
      #{reserved5,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.jingc.busi.common.table.StorePayLog" >
    update store_pay_log
    <set >
      <if test="payStoreId != null" >
        pay_store_id = #{payStoreId,jdbcType=INTEGER},
      </if>
      <if test="acceptStoreId != null" >
        accept_store_id = #{acceptStoreId,jdbcType=INTEGER},
      </if>
      <if test="operatorUserId != null" >
        operator_user_id = #{operatorUserId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="backTime != null" >
        back_time = #{backTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null" >
        reserved1 = #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null" >
        reserved2 = #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null" >
        reserved3 = #{reserved3,jdbcType=VARCHAR},
      </if>
      <if test="reserved4 != null" >
        reserved4 = #{reserved4,jdbcType=VARCHAR},
      </if>
      <if test="reserved5 != null" >
        reserved5 = #{reserved5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询店铺充值记录 -->
  <select id="selectByObject" resultMap="BaseResultMap">
  	select 
  	store_pay_log.id, store_pay_log.pay_store_id,store.store_name, store_pay_log.accept_store_id, store_pay_log.operator_user_id, store_user.user_name ,store_pay_log.type, store_pay_log.money, store_pay_log.create_time, store_pay_log.back_time, 
    store_pay_log.state, store_pay_log.pay_id, store_pay_log.comments, store_pay_log.reserved1, store_pay_log.reserved2, store_pay_log.reserved3, store_pay_log.reserved4, store_pay_log.reserved5
    from store_pay_log left join store on store.store_id = store_pay_log.pay_store_id 
    left join store_user on store_user.user_id = store_pay_log.operator_user_id 
  	<where>
  		<if test="param.payStoreId != null and param.payStoreId != ''">
  		 store_pay_log.pay_store_id = #{param.payStoreId}
  		</if>
  		<!-- TYPE和TYPELIST只能给其中一个赋值 -->
  		<if test="param.type != null and param.type != ''">
  		and store_pay_log.type = #{param.type}
  		</if>
  		<if test="param.typeList != null and param.typeList.size() > 0">
  		and store_pay_log.type in 
  			<foreach collection="param.typeList" item="item" open="(" separator="," close=")">#{item}</foreach>
  		</if>
  		<if test="(param.backTimeBegin != null and param.backTimeBegin != '') and (param.backTimeEnd != null and param.backTimeEnd != '')">
  		 and store_pay_log.back_time between CONCAT(#{param.backTimeBegin}," 00:00:00") and CONCAT(#{param.backTimeEnd}," 23:59:59")
  		</if>
  		<if test="(param.backTimeBegin != null and param.backTimeBegin != '') and (param.backTimeEnd == null or param.backTimeEnd == '')">
  			and store_pay_log.back_time &gt; CONCAT(#{param.backTimeBegin}," 00:00:00")
  		</if>
  		<if test="(param.backTimeBegin == null or param.backTimeBegin == '') and (param.backTimeEnd != null and param.backTimeEnd != '')">
  			and store_pay_log.back_time &lt; CONCAT(#{param.backTimeEnd}," 23:59:59")
  		</if>
  	</where>
  	order by store_pay_log.id DESC 
  	limit #{pagination.firstResult},#{pagination.pageSize}
  </select>
  <!-- 查询店铺充值记录条目数 -->
  <select id="selectWCountByObject" resultType="java.lang.Integer">
  	select count(*) from store_pay_log
  	<where>
  		<if test="param.payStoreId != null and param.payStoreId != ''">
  		 pay_store_id = #{param.payStoreId}
  		</if>
  		<!-- TYPE和TYPELIST只能给其中一个赋值 -->
  		<if test="param.type != null and param.type != ''">
  		and type = #{param.type}
  		</if>
  		<if test="param.typeList != null and param.typeList.size() > 0">
  		and type in 
  			<foreach collection="param.typeList" item="item" open="(" separator="," close=")">#{item}</foreach>
  		</if>
  		<if test="(param.backTimeBegin != null and param.backTimeBegin != '') and (param.backTimeEnd != null and param.backTimeEnd != '')">
  		 and back_time between CONCAT(#{param.backTimeBegin}," 00:00:00") and CONCAT(#{param.backTimeEnd}," 23:59:59")
  		</if>
  		<if test="(param.backTimeBegin != null and param.backTimeBegin != '') and (param.backTimeEnd == null or param.backTimeEnd == '')">
  			and back_time &gt; CONCAT(#{param.backTimeBegin}," 00:00:00")
  		</if>
  		<if test="(param.backTimeBegin == null or param.backTimeBegin == '') and (param.backTimeEnd != null and param.backTimeEnd != '')">
  			and back_time &lt; CONCAT(#{param.backTimeEnd}," 23:59:59")
  		</if>
  	</where>
  </select>
  
  
</mapper>